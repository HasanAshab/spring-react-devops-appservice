name: Backend CI pipeline
on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yaml'

  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yaml'

defaults:
  run:
    working-directory: backend

jobs:
  test:
    name: Run integration tests
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8-oracle
        env:
          MYSQL_DATABASE: hobbie_backend_db_prod
          MYSQL_ROOT_PASSWORD: 1
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          cache: maven

      - name: Run tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/hobbie_backend_db_prod?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Europe/Paris
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: 1

  lint:
    name: Run lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: super-linter/super-linter@v7
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVA: true

  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, lint]
  
    steps:
      - uses: actions/checkout@v4
  
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
          cache: maven
  
      - name: Build project
        run: mvn clean package -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            backend/target/*.jar
            backend/target/*.war

  docker:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs: [test, lint]
    outputs:
      image_tag: ${{ steps.build-scan-push.outputs.image_tag }}
      image_tag_short: ${{ steps.build-scan-push.outputs.image_tag_short }}
      image_ref: ${{ steps.build-scan-push.outputs.image_ref }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/docker-build-scan-push
        id: build-scan-push
        with:
          suffix: backend
          registry: ghcr.io
          github_token: ${{ secrets.GITHUB_TOKEN }}

  update-infra:
    name: Update docker image tag on infra repo
    runs-on: ubuntu-latest
    needs: docker
    env:
      PREFIX: backend
    defaults:
      run:
        working-directory: ./
    steps:
    - name: Checkout infra repo
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}-infra
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Update image tag in infra repo
      run: |
        echo "${{ env.PREFIX }}_docker_image_tag = \"${{ needs.docker.outputs.image_tag }}\"" > ${{ env.PREFIX }}.auto.tfvars

    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        commit-message: Update ${{ env.PREFIX }} docker image tag to ${{ needs.docker.outputs.image_tag }}
        title: Update ${{ env.PREFIX }} docker image tag to ${{ needs.docker.outputs.image_tag }}
        branch: update-${{ env.PREFIX }}-docker-tag
        committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
        author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

    - name: Enable auto-merge
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        repository: ${{ github.repository }}-infra
        pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
        merge-method: squash
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
